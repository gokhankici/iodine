qualif Eq1(v  : int, x as (VL_ . $1) : int, y as (VR_ . $1) : int): ((x = y)) // (line 0, column 0)
qualif Eq2(v  : int, x as (VLT . $1) : bool, y as (VRT . $1) : bool): ((x <=> y)) // (line 0, column 0)
qualif Zero1(v  : int, x as (VLT_ . $1) : bool): ((x <=> false)) // (line 0, column 0)
qualif Zero2(v  : int, x as (VRT_ . $1) : bool): ((x <=> false)) // (line 0, column 0)

qualif Custom1_11(v  : int, 
                  x   as VLT_x : bool, 
                  opa as VLT_opa : bool, 
                  opb as VLT_opb : bool): 
  ((x => || [opa; opb]))
qualif Custom1_21(v  : int, 
                  x   as VLT_x : bool, 
                  opa as VLT_opa : bool): 
  ((opa => x))
qualif Custom1_31(v  : int, 
                  x   as VLT_x : bool, 
                  opb as VLT_opb : bool): 
  ((opb => x))
qualif Custom1_12(v  : int, 
                  x   as VRT_x : bool, 
                  opa as VRT_opa : bool, 
                  opb as VRT_opb : bool): 
  ((x => || [opa; opb]))
qualif Custom1_22(v  : int, 
                  x   as VRT_x : bool, 
                  opa as VRT_opa : bool): 
  ((opa => x))
qualif Custom1_32(v  : int, 
                  x   as VRT_x : bool, 
                  opb as VRT_opb : bool): 
  ((opb => x))




constant uf_1_opb : (func(5, [int; int]))
constant uf_2_opa : (func(0, [int; int]))
constant uf_6_const_expr : (int)
constant uf_3_opb : (func(3, [int; int]))
constant uf_0_opa : (func(1, [int; int]))
constant uf_4_w1b : (func(2, [int; int; int]))
constant uf_5_w2b : (func(4, [int; int; int]))




bind 1 zero : {v : int | [(v = 0)]}
bind 2 one : {v : int | [(v = 1)]}
bind 3 tru : {v : bool | [(v <=> true)]}
bind 4 fals : {v : bool | [(v <=> false)]}
bind 5 VLT_out : {v : bool | []}
bind 6 VLT_y : {v : bool | []}
bind 7 VRT_out : {v : bool | []}
bind 8 VRT_y : {v : bool | []}
bind 9 VLT_opb : {v : bool | []}
bind 10 VRT_opb : {v : bool | []}
bind 11 VLT_clk : {v : bool | []}
bind 12 VRT_clk : {v : bool | []}
bind 13 VLT_opa : {v : bool | []}
bind 14 VRT_opa : {v : bool | []}
bind 15 VLT1_out : {v : bool | []}
bind 16 VL1_out : {v : int | []}
bind 17 VL_y : {v : int | []}
bind 18 VRT1_out : {v : bool | []}
bind 19 VR1_out : {v : int | []}
bind 20 VR_y : {v : int | []}
bind 21 VL_out : {v : int | []}
bind 22 VR_out : {v : int | []}
bind 23 VLT_x : {v : bool | []}
bind 24 VRT_x : {v : bool | []}
bind 25 VL_opb : {v : int | []}
bind 26 VR_opb : {v : int | []}
bind 27 VLT1_w2b : {v : bool | []}
bind 28 VL1_w2b : {v : int | []}
bind 29 VL_uf_3_opb : {v : int | []}
bind 30 VL_opa : {v : int | []}
bind 31 VR_opa : {v : int | []}
bind 32 VLT1_w2a : {v : bool | []}
bind 33 VL1_w2a : {v : int | []}
bind 34 VL_uf_2_opa : {v : int | []}
bind 35 VL_uf_5_w2b : {v : int | []}
bind 36 VLT1_y : {v : bool | []}
bind 37 VL1_y : {v : int | []}
bind 38 VL_uf_6_const_expr : {v : int | []}
bind 39 VL_x : {v : int | []}
bind 40 VRT1_w2b : {v : bool | []}
bind 41 VR1_w2b : {v : int | []}
bind 42 VR_uf_3_opb : {v : int | []}
bind 43 VRT1_w2a : {v : bool | []}
bind 44 VR1_w2a : {v : int | []}
bind 45 VR_uf_2_opa : {v : int | []}
bind 46 VR_uf_5_w2b : {v : int | []}
bind 47 VRT1_y : {v : bool | []}
bind 48 VR1_y : {v : int | []}
bind 49 VR_uf_6_const_expr : {v : int | []}
bind 50 VR_x : {v : int | []}
bind 51 VLT1_w1b : {v : bool | []}
bind 52 VL1_w1b : {v : int | []}
bind 53 VL_uf_1_opb : {v : int | []}
bind 54 VLT1_w1a : {v : bool | []}
bind 55 VL1_w1a : {v : int | []}
bind 56 VL_uf_0_opa : {v : int | []}
bind 57 VR1_w1b : {v : int | []}
bind 58 VR1_w1a : {v : int | []}
bind 59 VLT1_x : {v : bool | []}
bind 60 VL1_x : {v : int | []}
bind 61 VL_uf_4_w1b : {v : int | []}
bind 62 VRT1_w1b : {v : bool | []}
bind 63 VR_uf_1_opb : {v : int | []}
bind 64 VRT1_w1a : {v : bool | []}
bind 65 VR_uf_0_opa : {v : int | []}
bind 66 VRT1_x : {v : bool | []}
bind 67 VR1_x : {v : int | []}
bind 68 VR_uf_4_w1b : {v : int | []}




constraint:
  env [3; 4; 5; 6; 7; 8]
  lhs {v##1 : int | [tru]}
  rhs {v##1 : int | [$inv13[VRT_out:=fals][VLT_y:=fals][VRT_y:=fals][VLT_out:=fals][VLT_opa:=fals][VRT_opa:=fals][VLT_opb:=fals][VRT_opb:=fals][v:=v##1]]}
  id 1 tag []
  // META constraint id 1 : (init of block 13) always block id: 13


constraint:
  env [4; 5; 6; 7; 8]
  lhs {v##2 : int | [$inv13[v:=v##2]]}
  rhs {v##2 : int | [$inv13[VRT_out:=fals][VLT_y:=fals][VRT_y:=fals][VLT_out:=fals][VLT_opa:=tru][VRT_opa:=tru][VLT_opb:=tru][VRT_opb:=tru][v:=v##2]]}
  id 2 tag []
  // META constraint id 2 : (re-tag of block 13) always block id: 13


constraint:
  env [5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       16;
       17;
       18;
       19;
       20;
       21;
       22]
  lhs {v##3 : int | [$inv13[v:=v##3];
                     (VLT_opb <=> VRT_opb);
                     (VLT_clk <=> VRT_clk);
                     (VLT_opa <=> VRT_opa);
                     (VLT1_out = VLT_y);
                     (VL1_out = VL_y);
                     (VRT1_out = VRT_y);
                     (VR1_out = VR_y)]}
  rhs {v##3 : int | [$inv13[VRT_out:=VRT1_out][VL_out:=VL1_out][VLT_out:=VLT1_out][v:=v##3][VR_out:=VR1_out]]}
  id 3 tag []
  // META constraint id 3 : (next of block 13) always block id: 13


constraint:
  env [3; 4; 6; 8; 23; 24]
  lhs {v##4 : int | [tru]}
  rhs {v##4 : int | [$inv10[VLT_y:=fals][VRT_y:=fals][VLT_x:=fals][VRT_x:=fals][VLT_opa:=fals][VRT_opa:=fals][VLT_opb:=fals][VRT_opb:=fals][v:=v##4]]}
  id 4 tag []
  // META constraint id 4 : (init of block 10) always block id: 10


constraint:
  env [3; 4; 6; 8; 23; 24]
  lhs {v##5 : int | [$inv10[v:=v##5]]}
  rhs {v##5 : int | [$inv10[VLT_x:=fals][VRT_x:=fals][VLT_opa:=tru][VRT_opa:=tru][VLT_opb:=tru][VRT_opb:=tru][v:=v##5]]}
  id 5 tag []
  // META constraint id 5 : (re-tag of block 10) always block id: 10


constraint:
  env [2;
       4;
       6;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       17;
       20;
       23;
       24;
       25;
       26;
       27;
       28;
       29;
       30;
       31;
       32;
       33;
       34;
       35;
       36;
       37;
       38;
       39;
       40;
       41;
       42;
       43;
       44;
       45;
       46;
       47;
       48;
       49;
       50]
  lhs {v##6 : int | [$inv10[v:=v##6];
                     (VLT_opb <=> VRT_opb);
                     (VLT_clk <=> VRT_clk);
                     (VLT_opa <=> VRT_opa);
                     (VLT_opb <=> VRT_opb);
                     (VLT_opa <=> VRT_opa);
                     (VLT_opb <=> VRT_opa);
                     (VRT_opb <=> VLT_opa);
                     (VLT_opb <=> VRT_opb);
                     (VLT_opa <=> VRT_opa);
                     (VL_uf_3_opb = (uf_3_opb VL_opb));
                     (VR_uf_3_opb = (uf_3_opb VR_opb));
                     (VLT1_w2b = VLT_opb);
                     (VL1_w2b = VL_uf_3_opb);
                     (VL_uf_2_opa = (uf_2_opa VL_opa));
                     (VR_uf_2_opa = (uf_2_opa VR_opa));
                     (VLT1_w2a = VLT_opa);
                     (VL1_w2a = VL_uf_2_opa);
                     ((VL_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                      (VR_uf_6_const_expr = uf_6_const_expr)];
                                                  (VLT1_y <=> || [VLT1_w2b; || [VLT1_w2a; fals]]);
                                                  (VL1_y = VL_uf_6_const_expr)]);
                     ((~ ((VL_uf_5_w2b >= one))) => && [(VLT1_y <=> || [VLT1_w2b;
                                                                      || [VLT1_w2a; VLT_x]]);
                                                        (VL1_y = VL_x)]);
                     (VL_uf_3_opb = (uf_3_opb VL_opb));
                     (VR_uf_3_opb = (uf_3_opb VR_opb));
                     (VRT1_w2b = VRT_opb);
                     (VR1_w2b = VR_uf_3_opb);
                     (VL_uf_2_opa = (uf_2_opa VL_opa));
                     (VR_uf_2_opa = (uf_2_opa VR_opa));
                     (VRT1_w2a = VRT_opa);
                     (VR1_w2a = VR_uf_2_opa);
                     (VL_uf_5_w2b = (uf_5_w2b VL1_w2b VL1_w2a));
                     (VR_uf_5_w2b = (uf_5_w2b VR1_w2b VR1_w2a));
                     ((VR_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                      (VR_uf_6_const_expr = uf_6_const_expr)];
                                                  (VRT1_y <=> || [VRT1_w2b; || [VRT1_w2a; fals]]);
                                                  (VR1_y = VR_uf_6_const_expr)]);
                     ((~ ((VR_uf_5_w2b >= one))) => && [(VRT1_y <=> || [VRT1_w2b;
                                                                      || [VRT1_w2a; VRT_x]]);
                                                        (VR1_y = VR_x)])]}
  rhs {v##6 : int | [$inv10[VL_y:=VL1_y][VLT_y:=VLT1_y][VRT_y:=VRT1_y][VR_y:=VR1_y][v:=v##6]]}
  id 6 tag []
  // META constraint id 6 : (next of block 10) always block id: 10


constraint:
  env [3; 4; 23; 24]
  lhs {v##7 : int | [tru]}
  rhs {v##7 : int | [$inv7[VLT_x:=fals][VRT_x:=fals][VLT_opa:=fals][VRT_opa:=fals][VLT_opb:=fals][VRT_opb:=fals][v:=v##7]]}
  id 7 tag []
  // META constraint id 7 : (init of block 7) always block id: 7


constraint:
  env [3; 23; 24]
  lhs {v##8 : int | [$inv7[v:=v##8]]}
  rhs {v##8 : int | [$inv7[VLT_opa:=tru][VRT_opa:=tru][VLT_opb:=tru][VRT_opb:=tru][v:=v##8]]}
  id 8 tag []
  // META constraint id 8 : (re-tag of block 7) always block id: 7


constraint:
  env [9;
       10;
       11;
       12;
       13;
       14;
       23;
       24;
       25;
       26;
       30;
       31;
       39;
       50;
       51;
       52;
       53;
       54;
       55;
       56;
       57;
       58;
       59;
       60;
       61;
       62;
       63;
       64;
       65;
       66;
       67;
       68]
  lhs {v##9 : int | [$inv7[v:=v##9];
                     (VLT_opb <=> VRT_opb);
                     (VLT_clk <=> VRT_clk);
                     (VLT_opa <=> VRT_opa);
                     (VLT_opb <=> VRT_opb);
                     (VLT_opa <=> VRT_opa);
                     (VLT_opb <=> VRT_opa);
                     (VRT_opb <=> VLT_opa);
                     (VLT_opb <=> VRT_opb);
                     (VLT_opa <=> VRT_opa);
                     (VL_uf_1_opb = (uf_1_opb VL_opb));
                     (VR_uf_1_opb = (uf_1_opb VR_opb));
                     (VLT1_w1b = VLT_opb);
                     (VL1_w1b = VL_uf_1_opb);
                     (VL_uf_0_opa = (uf_0_opa VL_opa));
                     (VR_uf_0_opa = (uf_0_opa VR_opa));
                     (VLT1_w1a = VLT_opa);
                     (VL1_w1a = VL_uf_0_opa);
                     (VL_uf_4_w1b = (uf_4_w1b VL1_w1b VL1_w1a));
                     (VR_uf_4_w1b = (uf_4_w1b VR1_w1b VR1_w1a));
                     (VLT1_x <=> || [VLT1_w1a; VLT1_w1b]);
                     (VL1_x = VL_uf_4_w1b);
                     (VL_uf_1_opb = (uf_1_opb VL_opb));
                     (VR_uf_1_opb = (uf_1_opb VR_opb));
                     (VRT1_w1b = VRT_opb);
                     (VR1_w1b = VR_uf_1_opb);
                     (VL_uf_0_opa = (uf_0_opa VL_opa));
                     (VR_uf_0_opa = (uf_0_opa VR_opa));
                     (VRT1_w1a = VRT_opa);
                     (VR1_w1a = VR_uf_0_opa);
                     (VL_uf_4_w1b = (uf_4_w1b VL1_w1b VL1_w1a));
                     (VR_uf_4_w1b = (uf_4_w1b VR1_w1b VR1_w1a));
                     (VRT1_x <=> || [VRT1_w1a; VRT1_w1b]);
                     (VR1_x = VR_uf_4_w1b)]}
  rhs {v##9 : int | [$inv7[VL_x:=VL1_x][VLT_x:=VLT1_x][VRT_x:=VRT1_x][VR_x:=VR1_x][v:=v##9]]}
  id 9 tag []
  // META constraint id 9 : (next of block 7) always block id: 7


constraint:
  env [6;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       17;
       20;
       23;
       24;
       25;
       26;
       30;
       31;
       39;
       50;
       51;
       52;
       53;
       54;
       55;
       56;
       57;
       58;
       59;
       60;
       61;
       62;
       63;
       64;
       65;
       66;
       67;
       68]
  lhs {v##10 : int | [$inv7[v:=v##10];
                      $inv10[v:=v##10];
                      (VLT_opb <=> VRT_opb);
                      (VLT_clk <=> VRT_clk);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opa);
                      (VRT_opb <=> VLT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VL_uf_1_opb = (uf_1_opb VL_opb));
                      (VR_uf_1_opb = (uf_1_opb VR_opb));
                      (VLT1_w1b = VLT_opb);
                      (VL1_w1b = VL_uf_1_opb);
                      (VL_uf_0_opa = (uf_0_opa VL_opa));
                      (VR_uf_0_opa = (uf_0_opa VR_opa));
                      (VLT1_w1a = VLT_opa);
                      (VL1_w1a = VL_uf_0_opa);
                      (VL_uf_4_w1b = (uf_4_w1b VL1_w1b VL1_w1a));
                      (VR_uf_4_w1b = (uf_4_w1b VR1_w1b VR1_w1a));
                      (VLT1_x <=> || [VLT1_w1a; VLT1_w1b]);
                      (VL1_x = VL_uf_4_w1b);
                      (VL_uf_1_opb = (uf_1_opb VL_opb));
                      (VR_uf_1_opb = (uf_1_opb VR_opb));
                      (VRT1_w1b = VRT_opb);
                      (VR1_w1b = VR_uf_1_opb);
                      (VL_uf_0_opa = (uf_0_opa VL_opa));
                      (VR_uf_0_opa = (uf_0_opa VR_opa));
                      (VRT1_w1a = VRT_opa);
                      (VR1_w1a = VR_uf_0_opa);
                      (VL_uf_4_w1b = (uf_4_w1b VL1_w1b VL1_w1a));
                      (VR_uf_4_w1b = (uf_4_w1b VR1_w1b VR1_w1a));
                      (VRT1_x <=> || [VRT1_w1a; VRT1_w1b]);
                      (VR1_x = VR_uf_4_w1b)]}
  rhs {v##10 : int | [$inv10[VL_x:=VL1_x][VLT_x:=VLT1_x][VRT_x:=VRT1_x][VR_x:=VR1_x][v:=v##10]]}
  id 10 tag []
  // META constraint id 10 : (interference with 7) always block id: 10


constraint:
  env [2;
       4;
       9;
       10;
       11;
       12;
       13;
       14;
       23;
       24;
       25;
       26;
       27;
       28;
       29;
       30;
       31;
       32;
       33;
       34;
       35;
       36;
       37;
       38;
       39;
       40;
       41;
       42;
       43;
       44;
       45;
       46;
       47;
       48;
       49;
       50]
  lhs {v##11 : int | [$inv10[v:=v##11];
                      $inv7[v:=v##11];
                      (VLT_opb <=> VRT_opb);
                      (VLT_clk <=> VRT_clk);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opa);
                      (VRT_opb <=> VLT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VL_uf_3_opb = (uf_3_opb VL_opb));
                      (VR_uf_3_opb = (uf_3_opb VR_opb));
                      (VLT1_w2b = VLT_opb);
                      (VL1_w2b = VL_uf_3_opb);
                      (VL_uf_2_opa = (uf_2_opa VL_opa));
                      (VR_uf_2_opa = (uf_2_opa VR_opa));
                      (VLT1_w2a = VLT_opa);
                      (VL1_w2a = VL_uf_2_opa);
                      ((VL_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                       (VR_uf_6_const_expr = uf_6_const_expr)];
                                                   (VLT1_y <=> || [VLT1_w2b; || [VLT1_w2a; fals]]);
                                                   (VL1_y = VL_uf_6_const_expr)]);
                      ((~ ((VL_uf_5_w2b >= one))) => && [(VLT1_y <=> || [VLT1_w2b;
                                                                       || [VLT1_w2a; VLT_x]]);
                                                         (VL1_y = VL_x)]);
                      (VL_uf_3_opb = (uf_3_opb VL_opb));
                      (VR_uf_3_opb = (uf_3_opb VR_opb));
                      (VRT1_w2b = VRT_opb);
                      (VR1_w2b = VR_uf_3_opb);
                      (VL_uf_2_opa = (uf_2_opa VL_opa));
                      (VR_uf_2_opa = (uf_2_opa VR_opa));
                      (VRT1_w2a = VRT_opa);
                      (VR1_w2a = VR_uf_2_opa);
                      (VL_uf_5_w2b = (uf_5_w2b VL1_w2b VL1_w2a));
                      (VR_uf_5_w2b = (uf_5_w2b VR1_w2b VR1_w2a));
                      ((VR_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                       (VR_uf_6_const_expr = uf_6_const_expr)];
                                                   (VRT1_y <=> || [VRT1_w2b; || [VRT1_w2a; fals]]);
                                                   (VR1_y = VR_uf_6_const_expr)]);
                      ((~ ((VR_uf_5_w2b >= one))) => && [(VRT1_y <=> || [VRT1_w2b;
                                                                       || [VRT1_w2a; VRT_x]]);
                                                         (VR1_y = VR_x)])]}
  rhs {v##11 : int | [$inv7[v:=v##11]]}
  id 11 tag []
  // META constraint id 11 : (interference with 10) always block id: 7


constraint:
  env [2;
       4;
       5;
       6;
       7;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       17;
       20;
       21;
       22;
       23;
       24;
       25;
       26;
       27;
       28;
       29;
       30;
       31;
       32;
       33;
       34;
       35;
       36;
       37;
       38;
       39;
       40;
       41;
       42;
       43;
       44;
       45;
       46;
       47;
       48;
       49;
       50]
  lhs {v##12 : int | [$inv10[v:=v##12];
                      $inv13[v:=v##12];
                      (VLT_opb <=> VRT_opb);
                      (VLT_clk <=> VRT_clk);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opa);
                      (VRT_opb <=> VLT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VL_uf_3_opb = (uf_3_opb VL_opb));
                      (VR_uf_3_opb = (uf_3_opb VR_opb));
                      (VLT1_w2b = VLT_opb);
                      (VL1_w2b = VL_uf_3_opb);
                      (VL_uf_2_opa = (uf_2_opa VL_opa));
                      (VR_uf_2_opa = (uf_2_opa VR_opa));
                      (VLT1_w2a = VLT_opa);
                      (VL1_w2a = VL_uf_2_opa);
                      ((VL_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                       (VR_uf_6_const_expr = uf_6_const_expr)];
                                                   (VLT1_y <=> || [VLT1_w2b; || [VLT1_w2a; fals]]);
                                                   (VL1_y = VL_uf_6_const_expr)]);
                      ((~ ((VL_uf_5_w2b >= one))) => && [(VLT1_y <=> || [VLT1_w2b;
                                                                       || [VLT1_w2a; VLT_x]]);
                                                         (VL1_y = VL_x)]);
                      (VL_uf_3_opb = (uf_3_opb VL_opb));
                      (VR_uf_3_opb = (uf_3_opb VR_opb));
                      (VRT1_w2b = VRT_opb);
                      (VR1_w2b = VR_uf_3_opb);
                      (VL_uf_2_opa = (uf_2_opa VL_opa));
                      (VR_uf_2_opa = (uf_2_opa VR_opa));
                      (VRT1_w2a = VRT_opa);
                      (VR1_w2a = VR_uf_2_opa);
                      (VL_uf_5_w2b = (uf_5_w2b VL1_w2b VL1_w2a));
                      (VR_uf_5_w2b = (uf_5_w2b VR1_w2b VR1_w2a));
                      ((VR_uf_5_w2b >= one) => && [&& [(VL_uf_6_const_expr = uf_6_const_expr);
                                                       (VR_uf_6_const_expr = uf_6_const_expr)];
                                                   (VRT1_y <=> || [VRT1_w2b; || [VRT1_w2a; fals]]);
                                                   (VR1_y = VR_uf_6_const_expr)]);
                      ((~ ((VR_uf_5_w2b >= one))) => && [(VRT1_y <=> || [VRT1_w2b;
                                                                       || [VRT1_w2a; VRT_x]]);
                                                         (VR1_y = VR_x)])]}
  rhs {v##12 : int | [$inv13[VL_y:=VL1_y][VLT_y:=VLT1_y][VRT_y:=VRT1_y][VR_y:=VR1_y][v:=v##12]]}
  id 12 tag []
  // META constraint id 12 : (interference with 10) always block id: 13


constraint:
  env [6;
       8;
       9;
       10;
       11;
       12;
       13;
       14;
       15;
       16;
       17;
       18;
       19;
       20;
       23;
       24;
       39;
       50]
  lhs {v##13 : int | [$inv13[v:=v##13];
                      $inv10[v:=v##13];
                      (VLT_opb <=> VRT_opb);
                      (VLT_clk <=> VRT_clk);
                      (VLT_opa <=> VRT_opa);
                      (VLT_opb <=> VRT_opb);
                      (VLT_opa <=> VRT_opa);
                      (VLT1_out = VLT_y);
                      (VL1_out = VL_y);
                      (VRT1_out = VRT_y);
                      (VR1_out = VR_y)]}
  rhs {v##13 : int | [$inv10[v:=v##13]]}
  id 13 tag []
  // META constraint id 13 : (interference with 13) always block id: 10


constraint:
  env [5; 7]
  lhs {v##14 : int | [$inv13[v:=v##14]]}
  rhs {v##14 : int | [(VLT_out <=> VRT_out)]}
  id 14 tag []
  // META constraint id 14 : (tag eq of block 13) always block id: 13


constraint:
  env [23;24]
  lhs {v##15 : int | [$inv7[v:=v##15]]}
  rhs {v##15 : int | [(VLT_x <=> VRT_x)]}
  id 15 tag []


wf:
  env [5; 6; 7; 8; 17; 20; 21; 22; 9; 10; 13; 14]
  reft {v : int | [$inv13]}
  // META wf : (wf of block 13) always block id: 13


wf:
  env [23; 24; 39; 50; 9; 10; 13; 14]
  reft {v : int | [$inv7]}
  // META wf : (wf of block 7) always block id: 7


wf:
  env [6; 8; 17; 20; 23; 24; 39; 50; 9; 10; 13; 14]
  reft {v : int | [$inv10]}
  // META wf : (wf of block 10) always block id: 10





